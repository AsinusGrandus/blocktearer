<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>McWordTearer</title>
</head>
<body>
    <b>Results for <%=locals.block_name%></b>
    <a href="/">Go back</a>
    <div class='column_holder'>
        <div id="first_blocks_column" class="block_column">
            <b>First block options:</b>
            <div id="first_blocks_column_grid" class="grid" data-blocks="<%=locals.first_blocks%>"></div>
        </div>
        <div id="last_blocks_column" class="block_column">
            <b>Second block options:</b>
            <div id="last_blocks_column_grid" class="grid" data-blocks="<%=locals.last_blocks%>"></div>
        </div>
    </div>

</body>
<!-- https://www.w3schools.com/howto/tryit.asp?filename=tryhow_js_popup -->
<script>
    const columnIds = ['#first_blocks_column_grid', '#last_blocks_column_grid']

    columnIds.forEach((id) => {
        // get column
        const blockColumn = document.querySelector(id);
        // get block data
        const blocks = JSON.parse(blockColumn.dataset.blocks);

        let Used = new Array();

        blocks.forEach((element) => {
            // create new element with it's name
            const blockP = document.createElement('p');
            const elementText = element.name

            if (Used.includes(elementText)) {
                // the block is already used
                return
            }
            // add popup
            const span = document.createElement('span');
            span.classList.add("popuptext");
            span.id = `${element.id}: ${element.name}`;
            span.dataset.block = element;
// dataset should be list, if is used, push details else create list with details
// bind popupfunction with id, get details using said id
            // <span class="popuptext" id="myPopup">A Simple Popup!</span>
            // add text to <p>
            const text = document.createTextNode(elementText);
            blockP.appendChild(text);

            // add <p> to <div>
            const div = document.createElement('div');
            div.appendChild(blockP);

            // append to column
            blockColumn.appendChild(div);

            // mark element as used
            Used.push(elementText)
        })

    })

    function popUp(id) {
        var popup = document.getElementById("myPopup");
        popup.classList.toggle("show");
    }
</script>
<style>
    /*Website style*/
    .column_holder {
        vertical-align: text-top;
        display: grid;
        grid-auto-columns: 1fr;
        grid-auto-rows: 1fr;
        grid-auto-flow: column;
        gap: 10px;
        
    }
    .block_column {
        border-color: rgb(99, 99, 99);
        border-width: 5px;
        border-style: solid;
    }
    .grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 5px;
        padding: 5px;
    }

    /*Popup style - https://www.w3schools.com/howto/howto_js_popup.asp */
    /* Popup container - can be anything you want */
    .popup {
    position: relative;
    display: inline-block;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    }

    /* The actual popup */
    .popup .popuptext {
    visibility: hidden;
    width: 160px;
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 8px 0;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    margin-left: -80px;
    }

    /* Popup arrow */
    .popup .popuptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
    }

    /* Toggle this class - hide and show the popup */
    .popup .show {
    visibility: visible;
    -webkit-animation: fadeIn 1s;
    animation: fadeIn 1s;
    }

    /* Add animation (fade in the popup) */
    @-webkit-keyframes fadeIn {
    from {opacity: 0;} 
    to {opacity: 1;}
    }

    @keyframes fadeIn {
    from {opacity: 0;}
    to {opacity:1 ;}
    }
</style>
</html>